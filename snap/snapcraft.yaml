name: jhack
base: core20

architectures:
#  - build-on: s390x
#  - build-on: ppc64el
  - build-on: arm64
#  - build-on: armhf
  - build-on: amd64
  - build-on: i386

adopt-info: jhack
summary: Cli tool packed with juju hacks.

description: |
  An opinionated collection of scripts and utilities to make
  charming charming again. Many of the scripts in jhack interact with the juju snap and
  communicate with its client by issuing `juju` cli calls.
  This snap requires write access to ~/.local/share/juju via an interface named
  dot-local-share-juju, so that the juju client configuration can be used to talk to the
  user's clouds, controllers and models. Also, on machine models, you will need to connect the 
  `ssh-keys` plug so that jhack can run `juju ssh` on your behalf. 

grade: stable
confinement: strict

parts:
  jhack:
    plugin: python
    source: .
    override-build: |
      snapcraftctl build
      VERSION=$(cat ./pyproject.toml | grep -Po 'version = "\K[^"]*')
      snapcraftctl set-version $VERSION
    stage-packages:
      - sshfs
    stage-snaps:
      - juju/3.3/beta

apps:
  jhack:
    command: bin/jhack
    plugs:
      - network
      - network-bind
      - dot-local-share-juju
      - dot-config-jhack
      - shared-memory
      - home-read
      - ssh-read
      - fuse-support
      - desktop

plugs:
  # read-write access to .local/share/juju (JUJU_DATA)
  dot-local-share-juju:
    interface: personal-files
    write:
      - $HOME/.local/share/juju

  # read access to jhack configuration file
  dot-config-jhack:
    interface: personal-files
    read:
      - $HOME/.config/jhack

  # required to use multiprocessing semaphores
  shared-memory:
    private: true

  # read access to $HOME. Required for sync and other commands that manipulate
  #  your local code projects.
  home-read:
    interface: home

  # access ssh keys to make them available to the embedded juju snap
  ssh-read:
    interface: ssh-keys

  # use xdg-open
  desktop:
    interface: desktop

  # allow sshfs to bind /dev/fuse
  fuse-support:
    interface: fuse-support